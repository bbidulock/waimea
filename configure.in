AC_INIT(src/main.cc)
AM_INIT_AUTOMAKE(Waimea, 0.1.1)
AC_PROG_CC
AC_PROG_CXX
AC_PROG_INSTALL

AC_PATH_X
AC_PATH_XTRA

CFLAGS="$CFLAGS $X_CFLAGS"
CXXFLAGS="$CXXFLAGS $X_CFLAGS"
LIBS="$LIBS $X_LIBS"
LDFLAGS="$LDFLAGS $LIBS $X_PRE_LIBS"

AC_CHECK_PROGS(regex_cmd, sed)
if test x$regex_cmd = "x"; then
  AC_MSG_ERROR([error. sed is required to build the default style file.])
fi

AC_CHECK_LIB(X11, XOpenDisplay,
  LIBS="$LIBS -lX11",
  AC_MSG_ERROR([Could not find XOpenDisplay in -lX11.])
)

dnl Check for XShape extension support and proper library files.
SHAPE=""
AC_MSG_CHECKING([whether to build support for the XShape extension])
AC_ARG_ENABLE(
  shape, [  --enable-shape          enable support of the XShape extension [default=yes]])

: ${enableval="yes"}
if test x$enableval = "xyes"; then
  AC_MSG_RESULT([yes])
  AC_CHECK_LIB(Xext, XShapeCombineShape,
    AC_MSG_CHECKING([for X11/extensions/shape.h])
    AC_TRY_LINK(
#include <X11/Xlib.h>
#include <X11/Xutil.h>
#include <X11/extensions/shape.h>
, long foo = ShapeSet,
      AC_MSG_RESULT([yes])
      SHAPE="-DSHAPE"; Xext_lib="-lXext",
      AC_MSG_RESULT([no])
    )
  )
else
  AC_MSG_RESULT([no])
fi
AC_SUBST(SHAPE)

LIBS="$LIBS $Xext_lib"

dnl Check xft extension
XFT=""
AC_ARG_ENABLE(xft,
[  --enable-xft            enable xft extension if available [[default]]
  --disable-xft           don't use xft extension], [],
 [enable_xft=yes])

if test "x$enable_xft" = "xyes"; then   
AC_CHECK_LIB(Xft, XftDefaultHasRender,
  AC_CHECK_HEADER(X11/Xft/Xft.h,
    [LIBS="$LIBS -lXft"]
    [XFT="-DXFT"],
    AC_MSG_RESULT([** WARNING: X11/Xft/Xft.h is missing])
    AC_MSG_RESULT([** WARNING: Disabled xft extension support])
    [XFT=""]
  ),
  AC_MSG_RESULT([** WARNING: Could not find XftDefaultHasRender in -lXft])
  AC_MSG_RESULT([** WARNING: Disabled xft extension support])
  [XFT=""]
)	
fi
AC_SUBST(XFT)

dnl Check for Interlacing
INTERLACE=""
AC_MSG_CHECKING([whether to include interlacing image code])
AC_ARG_ENABLE(
  interlace, [  --enable-interlace      include code for image interlacing [default=yes]],
  if test x$enableval = "xyes"; then
    AC_MSG_RESULT([yes])
    INTERLACE="-DINTERLACE"
  else
    AC_MSG_RESULT([no])
  fi,
  AC_MSG_RESULT([yes])
  INTERLACE="-DINTERLACE"
)
AC_SUBST(INTERLACE)

dnl Check for ordered 8bpp dithering
ORDEREDPSEUDO=""
AC_MSG_CHECKING([whether to include Pseudocolor ordered dithering code])
AC_ARG_ENABLE(ordered-pseudo,
[  --enable-ordered-pseudo include code for ordered pseudocolor (8bpp)
                          dithering [default=no]],
  if test x$enableval = "xyes"; then
    AC_MSG_RESULT([yes])
    ORDEREDPSEUDO="-DORDEREDPSEUDO"
  else
    AC_MSG_RESULT([no])
  fi,
  AC_MSG_RESULT([no])
)
AC_SUBST(ORDEREDPSEUDO)


AC_OUTPUT(Makefile 
src/Makefile
data/Makefile
data/styles/Makefile
data/backgrounds/Makefile)
